#!/bin/bash

# If number of arguments less then 1; print usage and exit
if [ $# -lt 3 ]; then
    printf "Usage: %s <application> <src_dir_1> <src_dir_2>\n" "$0" >&2
    exit 1
fi 

bin="$1"           # The application (from command arg)
srcdir1=`eval basename $(dirname $2)`
srcdir2=`eval basename $(dirname $3)`
diff="diff -iad"   # Diff command, or what ever
test_list="./test/tests.csv"
ext="out"

PASS_COLOR='\033[0;32m'
FAIL_COLOR='\033[0;31m'
NO_COLOR='\033[0m' 

# check if test list exists
if [ ! -f "$test_list" ]; then
    printf "ERROR : Test list '%s' does not exist\n" "$test_list"
    exit 3
fi

# check if directory exists
if [[ ! -d "$2" ]]; then
    printf "ERROR : Directory '%s' does not exist\n" "$2"
    exit 2
fi

if [[ ! -d "$3" ]]; then
    printf "ERROR : Directory '%s' does not exist\n" "$3"
    exit 2
fi

# check if exp directory exists
if [[ ! -d "./test/out/$srcdir1" ]]; then
    mkdir -p "./test/out/$srcdir1"
fi

# check if out directory exists
if [[ ! -d "./test/out/$srcdir2" ]]; then
    mkdir -p "./test/out/$srcdir2"
fi

# add tests from test list to file base
file_base=()
while IFS= read -r line 
do
    file_base+=("$line")
done < "$test_list"

# Loop the array
for file in "${file_base[@]}"; do
    echo "-------------------------------------"
    # Padd file_base with suffixes
    file_in_1="$2/${file}"            # The in files
    file_in_2="$3/${file}"            # The in files
    file_out_1="./test/out/$srcdir1/$file.$ext"       # The out file to check against
    file_out_2="./test/out/$srcdir2/$file.$ext"   # The outfile from test application

    # Validate infile exists (do the same for out validate file)
    if [ ! -f "$file_in_1" ]; then
        printf "ERROR : Input file '%s' does not exist\n" "$file_in_1"
        continue;
    fi
    if [ ! -f "$file_in_2" ]; then
        printf "ERROR : Input file '%s' does not exist\n" "$file_in_2"
        continue;
    fi

    # print the test performed
    printf "> %s\t" "$file"
    
    # Run application, redirect in file to app, and output to out file
    $bin < "$file_in_1" > "$file_out_1"
    $bin < "$file_in_2" > "$file_out_2"

    # Execute diff
    output=$($diff "$file_out_1" "$file_out_2")

    # Check exit code from previous command (ie diff)
    # We need to add this to a variable else we can't print it
    # as it will be changed by the if [
    # Iff not 0 then the files differ (at least with diff)
    e_code=$?
    if [ $e_code != 0 ]; then
            printf "${FAIL_COLOR}FAILED${NO_COLOR}\n"
            printf "%s\n" "$output"
    else
            printf "${PASS_COLOR}PASSED${NO_COLOR}\n"
    fi

    # # Pause by prompt
    # read -p "Enter a to abort, anything else to continue: " input_data
    # # Iff input is "a" then abort
    # [ "$input_data" == "a" ] && break
done
echo "-------------------------------------"

# Clean exit with status 0
exit 0
